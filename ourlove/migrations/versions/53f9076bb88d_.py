"""empty message

Revision ID: 53f9076bb88d
Revises: becc22cb9d08
Create Date: 2018-03-05 15:55:46.587568

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '53f9076bb88d'
down_revision = 'becc22cb9d08'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ContentType',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MediaType',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AuthToken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=80), nullable=False),
    sa.Column('token_hash', sa.String(length=328), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('BestPractice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mediatype', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=True),
    sa.Column('upvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('downvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mediatype'], ['MediaType.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Bond',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1_id', sa.Integer(), nullable=False),
    sa.Column('user2_id', sa.Integer(), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Chronicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mediatype', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=True),
    sa.Column('upvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('downvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mediatype'], ['MediaType.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=200), nullable=False),
    sa.Column('ref', sa.Integer(), nullable=True),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_type'], ['ContentType.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['Comment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Situation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=2000), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=20), dimensions=1), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('testimony', sa.String(length=1000), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Suggestion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.Integer(), nullable=False),
    sa.Column('header', sa.String(length=70), nullable=False),
    sa.Column('content', sa.String(length=400), nullable=False),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('response', sa.String(length=200), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sender'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Conversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=200), nullable=False),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sender'], ['User.id'], ),
    sa.ForeignKeyConstraint(['situation_id'], ['Situation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Counsel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('upvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('downvotes', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=True),
    sa.Column('isEdited', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['situation_id'], ['Situation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Counsel')
    op.drop_table('Conversion')
    op.drop_table('Suggestion')
    op.drop_table('Situation')
    op.drop_table('Comment')
    op.drop_table('Chronicle')
    op.drop_table('Bond')
    op.drop_table('BestPractice')
    op.drop_table('AuthToken')
    op.drop_table('Tag')
    op.drop_table('MediaType')
    op.drop_table('ContentType')
    # ### end Alembic commands ###
